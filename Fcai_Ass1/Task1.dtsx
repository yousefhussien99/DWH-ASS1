<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/29/2024 3:00:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-KAFQMC6"
  DTS:CreatorName="DESKTOP-KAFQMC6\dell"
  DTS:DTSID="{849F15F6-17FD-4031-96D1-66B0C4C5631F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="task1"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{041DA8F0-8993-4CB4-8763-ECB0E82C8369}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-KAFQMC6 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2866DE3F-3A05-4C39-BE3E-2C6E96AEEAB0}"
      DTS:ObjectName="DESKTOP-KAFQMC6 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-KAFQMC6;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-task1-{2866DE3F-3A05-4C39-BE3E-2C6E96AEEAB0}DESKTOP-KAFQMC6 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Task1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{d84a588b-b813-422a-a9d9-0cf29e6b75b5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Task1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Task1\Api Code"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{c59d6120-ce1e-41c1-bedc-d2ec5a4e8d8a}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Api Code"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_549adab1c4d749f0b5d4f04bdd05a14e"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_77c4954e4d1749f580a618eaf4f37210")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_77c4954e4d1749f580a618eaf4f37210")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net472" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="ST_549adab1c4d749f0b5d4f04bdd05a14e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{22F90432-BC33-4439-BC33-FE09C27173C9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_77c4954e4d1749f580a618eaf4f37210</RootNamespace>
    <AssemblyName>ST_549adab1c4d749f0b5d4f04bdd05a14e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\dell\AppData\Local\Temp\Vsta\SSIS_ST160\VstafCjN4cG2hESOwLpUjXDMvQ\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[
using System.Collections.Generic;


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using Newtonsoft.Json;
#endregion

namespace ST_77c4954e4d1749f580a618eaf4f37210
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public class Entry
        {
            public string Id { get; set; }
            public string Rank { get; set; }
            public string Symbol { get; set; }
            public string Name { get; set; }
            public string Supply { get; set; }
            public string MaxSupply { get; set; }
            public string MarketCapUsd { get; set; }
            public string VolumeUsd24Hr { get; set; }
            public string PriceUsd { get; set; }
            public string ChangePercent24Hr { get; set; }
            public string Vwap24Hr { get; set; }
            public string Explorer { get; set; }
        }
        public class Root
        {
            public List<Entry> data { get; set; }
        }
        public void Main()
        {
            string CurrentDateTime = DateTime.Now.ToString("yyyyMMddHHmmss"); // To get the current date and time
            string logfolder = @"C:\Users\dell\OneDrive\Documents\Fcai_Ass1\Fcai_Ass1"; // To get the log folder path
            try
            {
                ServicePointManager.Expect100Continue = true; 
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12; // To handle the security protocol

                var json = ""; // To store the json data
                using (WebClient wc = new WebClient()) // To get the data from the api
                {
                    json = wc.DownloadString("https://api.coincap.io/v2/assets"); // To get the data from the api
                }
                Root root = JsonConvert.DeserializeObject<Root>(json); // To deserialize the json data
                string connectionString = @"Data Source = DESKTOP-KAFQMC6; Initial Catalog = DW_Ass; Integrated Security = True; ";
                
                int RootDataLength = root.data.Count;
                MessageBox.Show("Length Of Records Must Be In DB Added Is" + RootDataLength); // Length Of Records

                for (int i = 0; i < RootDataLength; i++) // loop in list 
                {
                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString)) 
                        {
                            connection.Open(); // open connection
                            string insertStatement = @"INSERT INTO Data_From_Api (Id, Rank, Symbol, Name, Supply, MaxSupply, MarketCapUsd, VolumeUsd24Hr, PriceUsd, ChangePercent24Hr, Vwap24Hr, Explorer) 
                                                       VALUES(@Id, @Rank, @Symbol, @Name, @Supply, @MaxSupply, @MarketCapUsd, @VolumeUsd24Hr, @PriceUsd, @ChangePercent24Hr, @Vwap24Hr, @Explorer)";
                            // insert query
                            SqlCommand command = new SqlCommand(insertStatement, connection); // create command
                            // add parameters to the query and check if the value is null or not
                            // if it is null then add DBNull.Value as object
                            // else add the value
                            command.Parameters.AddWithValue("@Id", root.data[i].Id ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Rank", root.data[i].Rank ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Symbol", root.data[i].Symbol ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Name", root.data[i].Name ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Supply", root.data[i].Supply ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@MaxSupply", root.data[i].MaxSupply ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@MarketCapUsd", root.data[i].MarketCapUsd ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@VolumeUsd24Hr", root.data[i].VolumeUsd24Hr ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@PriceUsd", root.data[i].PriceUsd ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@ChangePercent24Hr", root.data[i].ChangePercent24Hr ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Vwap24Hr", root.data[i].Vwap24Hr ?? DBNull.Value as object);
                            command.Parameters.AddWithValue("@Explorer", root.data[i].Explorer ?? DBNull.Value as object);
                            command.ExecuteNonQuery(); // execute the query
                            connection.Close(); // close connection
                        }
                    }
                    catch (Exception ex)
                    {
                        LogMessage("Error inserting data for entry " + i + ": " + ex.Message); // log the error message
                    }

                }
            }
           

            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(logfolder + "\\" + "ErrorLog_" + CurrentDateTime + ".log"))
                {
                    sw.WriteLine(exception.ToString()); // write the exception to the log file
                }

            }
        }
        private void LogMessage(string message)
        {
            MessageBox.Show(message);  // show the message
        }
        #region ScriptResults declaration
    }
    #endregion
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_549adab1c4d749f0b5d4f04bdd05a14e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_549adab1c4d749f0b5d4f04bdd05a14e</msb:DisplayName>
    <msb:ProjectId>{0908C994-76AA-4EE6-BDCC-744CDB16B1E7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_549adab1c4d749f0b5d4f04bdd05a14e.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_77c4954e4d1749f580a618eaf4f37210.Properties.Settings.get_Default():ST_77c4954e4d1749f580a618eaf4f37210.Properties.Sett" +
    "ings")]

namespace ST_77c4954e4d1749f580a618eaf4f37210.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_77c4954e4d1749f580a618eaf4f37210.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_77c4954e4d1749f580a618eaf4f37210.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_77c4954e4d1749f580a618eaf4f37210.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_77c4954e4d1749f580a618eaf4f37210.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_77c4954e4d1749f580a618eaf4f37210.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_549adab1c4d749f0b5d4f04bdd05a14e.dll">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
AAQqHgJ7DAAABCoiAgN9DAAABCoeAnsNAAAEKiICA30NAAAEKh4Cew4AAAQqIgIDfQ4AAAQqHgJ7
DwAABCoiAgN9DwAABCoeAnsQAAAEKiICA30QAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAANwIAAAjfgAASAkAAMgJAAAjU3RyaW5ncwAAAAAQEwAATAYAACNVUwBcGQAAEAAA
ACNHVUlEAAAAbBkAAPQBAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAAvAAAA
BgAAABAAAAAmAAAADwAAAC8AAAA3AAAAAQAAAAQAAAAQAAAAHgAAAAEAAAABAAAABgAAAAEAAAAC
AAAAAQAAAAAA2gUBAAAAAAAGAGIE+AcGAPEE+AcGAK4D5QcPAGwIAAAGANsDigYGAEUEigYGACYE
igYGANgEigYGAIIEigYGAJsEigYGAPIDigYGAA0EOAUKALYEmwUKAB8DmwUGAM8CPQYOABQJ8AgS
AMAGHgkGAM4GPQYGAMAHOwAGAOkIPQYGAHYD+AcGACUAbAAGAJED5QcGAHUHGAgGAPsGdQYOAGED
xAUOAMIDxAUOADsDYAYOAIUH8AgOAOIC8AgGAIgCPQYWAEMJ6wYGACwAPQYGAGMFPQYaAGcJswga
AAcJswgSALMG2AYSAO4BHgkSAJwGHgkGAAIGPQYSALMHHgkSAOQB2AYGALgCOwAGAM0HOwAGAPIC
PQYGAJQCPQYGAHYJigYAAAAAMgAAAAAAAQABAAEAEABVBgEAOQABAAEAAAAQAB8IewhRAAEABAAA
ARAAqgh7CHEAAwAIAAIAEADBCQAAUQAEAAsAAgAQAD4JAABRABAAJAARAEQGzwARAA8D0wARAFkC
1wABAKsA2wABAA0B2wABACMB2wABAPcA2wABALEB2wABAMkB2wABANkA2wABADsB2wABAL8A2wAB
AHQB2wABAFoB2wABAJcB2wABAJUA3gBQIAAAAACGAFsGBgABACwkAAAAAIEAdQIQAAEANSQAAAAA
hhjYBwYAAgA9JAAAAACDGNgHBgACAEUkAAAAAJMIcQfmAAIAcSQAAAAAkwj3AusAAgB4JAAAAACT
CAMD8AACAIAkAAAAAJYI+wj2AAMAhyQAAAAAhhjYBwYAAwCPJAAAAACRGN4H+wADAJskAAAAAIYI
hwBeAAMAoyQAAAAAhgiOABAAAwCsJAAAAACGCGoFXgAEALQkAAAAAIYIcwUQAAQAvSQAAAAAhggJ
Bl4ABQDFJAAAAACGCBQGEAAFAM4kAAAAAIYIvQJeAAYA1iQAAAAAhgjGAhAABgDfJAAAAACGCH8J
XgAHAOckAAAAAIYIigkQAAcA8CQAAAAAhgiVCV4ACAD4JAAAAACGCKMJEAAIAAElAAAAAIYIEwJe
AAkACSUAAAAAhggkAhAACQASJQAAAACGCAcHXgAKABolAAAAAIYIGQcQAAoAIyUAAAAAhgj5AV4A
CwArJQAAAACGCAYCEAALADQlAAAAAIYIRQdeAAwAPCUAAAAAhghbBxAADABFJQAAAACGCCsHXgAN
AE0lAAAAAIYIOAcQAA0AViUAAAAAhgiZB14ADgBeJQAAAACGCKYHEAAOAD0kAAAAAIYY2AcGAA8A
ZyUAAAAAhghRAP8ADwBvJQAAAACGCFoACAEPAD0kAAAAAIYY2AcGABAAAAABAIACAAABABwFAAAB
ABwFAAABABwFAAABABwFAAABABwFAAABABwFAAABABwFAAABABwFAAABABwFAAABABwFAAABABwF
AAABABwFAAABABwFAAABABwFCQDYBwEAEQDYBwYAGQDYBwoAKQDYBxAAMQDYBxAAOQDYBxAAQQDY
BxAASQDYBxAAUQDYBxAAWQDYBxAAYQDYBxAAaQDYBwYAqQDYBwYAuQDYBwYA2QDYBxUAeQBaCTIA
eQBhBTcA6QAiBTwA6QAfBkEAgQDYBwYAgQBSBTcA+QBZAwYAAQHeCEcADAA0CVoACQFhBV4AEQHX
CGIAGQFiCWgAiQDYBxAAKQFQBgYAMQHYB28AMQHICHYADAA0BnwAQQEWBYIAOQEPBYcAUQGxCVoA
KQFTAwYAkQBpAl4AEQHXCI8AWQFPCZcAoQBhBV4AYQHYAhAAcQDYBwYAoQDYBwYAaQGmAp0AaQFy
CaYAwQDYB6wA4QDYBwYAKQB7AFYBLgALAC4BLgATADcBLgAbAFYBLgAjAF8BLgArAIgBLgAzAIgB
LgA7AIgBLgBDAF8BLgBLAI4BLgBTAIgBLgBbAKUBQwBjAO8BSQB7AFYBYQBrAO8BYwBzAO8BgQBr
AO8BoQBrAO8BwQBrAO8B4QBrAO8BAQFrAO8BIQFrAO8BQQFrAO8BYAFrAO8BYQFrAO8BgAFrAO8B
gQFrAO8BoAFrAO8BoQFrAO8BwAFrAO8BwQFrAO8B4AFrAO8B4QFrAO8BAAJrAO8BAQJrAO8BIAJr
AO8BQAJrAO8BYAJrAO8BgAJrAO8BoAJrAO8BwAJrAO8B4AJrAO8BAANrAO8BIANrAO8BQANrAO8B
YANrAO8BgANrAO8BoANrAO8BwANrAO8B4ANrAO8BAARrAO8BIARrAO8BQARrAO8BgARrAO8BoARr
AO8BGwADAAEABAADAAUABAAGABAAAAB1BxIBAAAXAxcBAAD/CBwBAACSACEBAAB3BSEBAAAYBiEB
AADKAiEBAACqCSEBAACnCSEBAAAoAiEBAAAdByEBAAAKAiEBAABfByEBAAA8ByEBAACqByEBAABe
ACUBAgAFAAMAAgAGAAUAAQAHAAUAAgAIAAcAAgALAAkAAQAMAAkAAgANAAsAAQAOAAsAAgAPAA0A
AQAQAA0AAgARAA8AAQASAA8AAgATABEAAQAUABEAAgAVABMAAQAWABMAAgAXABUAAQAYABUAAgAZ
ABcAAQAaABcAAgAbABkAAQAcABkAAgAdABsAAQAeABsAAgAfAB0AAQAgAB0AAgAhAB8AAQAiAB8A
AgAkACEAAQAlACEAUwAEgAAAAQAAAMgiZw8AAAAAAAA1AgAABAAAAAAAAAAAAAAAtABjAAAAAAAQ
AAAAAAAAAAAAAAC9AHwFAAAAAAQAAAAAAAAAAAAAALQAPQYAAAAABAAAAAAAAAAAAAAAtABFAAAA
AAANAAAAAAAAAAAAAADGAOsGAAAAAAQAAAAAAAAAAAAAALQAswgAAAAAAAAAAAEAAAApCAAABQAC
AAYAAgAvAE4AAAAAAABTVF83N2M0OTU0ZTRkMTc0OWY1ODBhNjE4ZWFmNGYzNzIxMABMaXN0YDEA
SW50MzIAPE1vZHVsZT4AU3lzdGVtLklPAFN5c3RlbS5EYXRhAGdldF9kYXRhAHNldF9kYXRhAG1z
Y29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdldF9JZABzZXRfSWQAPGRhdGE+a19f
QmFja2luZ0ZpZWxkADxJZD5rX19CYWNraW5nRmllbGQAPFByaWNlVXNkPmtfX0JhY2tpbmdGaWVs
ZAA8TWFya2V0Q2FwVXNkPmtfX0JhY2tpbmdGaWVsZAA8TmFtZT5rX19CYWNraW5nRmllbGQAPFJh
bms+a19fQmFja2luZ0ZpZWxkADxTeW1ib2w+a19fQmFja2luZ0ZpZWxkADxWb2x1bWVVc2QyNEhy
PmtfX0JhY2tpbmdGaWVsZAA8VndhcDI0SHI+a19fQmFja2luZ0ZpZWxkADxDaGFuZ2VQZXJjZW50
MjRIcj5rX19CYWNraW5nRmllbGQAPEV4cGxvcmVyPmtfX0JhY2tpbmdGaWVsZAA8U3VwcGx5Pmtf
X0JhY2tpbmdGaWVsZAA8TWF4U3VwcGx5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29t
bWFuZABnZXRfUHJpY2VVc2QAc2V0X1ByaWNlVXNkAGdldF9NYXJrZXRDYXBVc2QAc2V0X01hcmtl
dENhcFVzZABTVF81NDlhZGFiMWM0ZDc0OWYwYjVkNGYwNGJkZDA1YTE0ZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X01lc3NhZ2UATG9nTWVzc2FnZQBtZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X05hbWUAc2V0X05hbWUARGF0ZVRpbWUA
V3JpdGVMaW5lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQWRk
V2l0aFZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAERvd25sb2FkU3RyaW5nAFRvU3RyaW5nAGdldF9SYW5rAHNldF9SYW5rAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81NDlhZGFiMWM0ZDc0OWYwYjVkNGYwNGJk
ZDA1YTE0ZS5kbGwAREJOdWxsAGdldF9TeW1ib2wAc2V0X1N5bWJvbABzZXRfU2VjdXJpdHlQcm90
b2NvbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBh
cmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5
c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUluZm8AZ2V0X1ZvbHVtZVVz
ZDI0SHIAc2V0X1ZvbHVtZVVzZDI0SHIAZ2V0X1Z3YXAyNEhyAHNldF9Wd2FwMjRIcgBnZXRfQ2hh
bmdlUGVyY2VudDI0SHIAc2V0X0NoYW5nZVBlcmNlbnQyNEhyAGdldF9SZXNvdXJjZU1hbmFnZXIA
U2VydmljZVBvaW50TWFuYWdlcgBnZXRfRXhwbG9yZXIAc2V0X0V4cGxvcmVyAFNxbFBhcmFtZXRl
cgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83N2M0
OTU0ZTRkMTc0OWY1ODBhNjE4ZWFmNGYzNzIxMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNzdjNDk1NGU0ZDE3NDlmNTgwYTYxOGVhZjRmMzcyMTAuUHJv
cGVydGllcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBnZXRfUGFyYW1ldGVycwBDb25j
YXQARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQA
V2ViQ2xpZW50AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ291bnQAUm9vdABKc29uQ29udmVy
dABDcmVhdGVUZXh0AGdldF9Ob3cAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQBnZXRfU3Vw
cGx5AHNldF9TdXBwbHkAZ2V0X01heFN1cHBseQBzZXRfTWF4U3VwcGx5AEV4ZWN1dGVOb25RdWVy
eQBFbnRyeQAAAB15AHkAeQB5AE0ATQBkAGQASABIAG0AbQBzAHMAAGlDADoAXABVAHMAZQByAHMA
XABkAGUAbABsAFwATwBuAGUARAByAGkAdgBlAFwARABvAGMAdQBtAGUAbgB0AHMAXABGAGMAYQBp
AF8AQQBzAHMAMQBcAEYAYwBhAGkAXwBBAHMAcwAxAAABAEFoAHQAdABwAHMAOgAvAC8AYQBwAGkA
LgBjAG8AaQBuAGMAYQBwAC4AaQBvAC8AdgAyAC8AYQBzAHMAZQB0AHMAAICrRABhAHQAYQAgAFMA
bwB1AHIAYwBlACAAPQAgAEQARQBTAEsAVABPAFAALQBLAEEARgBRAE0AQwA2ADsAIABJAG4AaQB0
AGkAYQBsACAAQwBhAHQAYQBsAG8AZwAgAD0AIABEAFcAXwBBAHMAcwA7ACAASQBuAHQAZQBnAHIA
YQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQAgAD0AIABUAHIAdQBlADsAIAABUUwAZQBuAGcAdABo
ACAATwBmACAAUgBlAGMAbwByAGQAcwAgAE0AdQBzAHQAIABCAGUAIABJAG4AIABEAEIAIABBAGQA
ZABlAGQAIABJAHMAAIKxSQBOAFMARQBSAFQAIABJAE4AVABPACAARABhAHQAYQBfAEYAcgBvAG0A
XwBBAHAAaQAgACgASQBkACwAIABSAGEAbgBrACwAIABTAHkAbQBiAG8AbAAsACAATgBhAG0AZQAs
ACAAUwB1AHAAcABsAHkALAAgAE0AYQB4AFMAdQBwAHAAbAB5ACwAIABNAGEAcgBrAGUAdABDAGEA
cABVAHMAZAAsACAAVgBvAGwAdQBtAGUAVQBzAGQAMgA0AEgAcgAsACAAUAByAGkAYwBlAFUAcwBk
ACwAIABDAGgAYQBuAGcAZQBQAGUAcgBjAGUAbgB0ADIANABIAHIALAAgAFYAdwBhAHAAMgA0AEgA
cgAsACAARQB4AHAAbABvAHIAZQByACkAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAEEATABVAEUAUwAoAEAASQBkACwAIABAAFIAYQBu
AGsALAAgAEAAUwB5AG0AYgBvAGwALAAgAEAATgBhAG0AZQAsACAAQABTAHUAcABwAGwAeQAsACAA
QABNAGEAeABTAHUAcABwAGwAeQAsACAAQABNAGEAcgBrAGUAdABDAGEAcABVAHMAZAAsACAAQABW
AG8AbAB1AG0AZQBVAHMAZAAyADQASAByACwAIABAAFAAcgBpAGMAZQBVAHMAZAAsACAAQABDAGgA
YQBuAGcAZQBQAGUAcgBjAGUAbgB0ADIANABIAHIALAAgAEAAVgB3AGEAcAAyADQASAByACwAIABA
AEUAeABwAGwAbwByAGUAcgApAAAHQABJAGQAAAtAAFIAYQBuAGsAAA9AAFMAeQBtAGIAbwBsAAAL
QABOAGEAbQBlAAAPQABTAHUAcABwAGwAeQAAFUAATQBhAHgAUwB1AHAAcABsAHkAABtAAE0AYQBy
AGsAZQB0AEMAYQBwAFUAcwBkAAAdQABWAG8AbAB1AG0AZQBVAHMAZAAyADQASAByAAATQABQAHIA
aQBjAGUAVQBzAGQAACVAAEMAaABhAG4AZwBlAFAAZQByAGMAZQBuAHQAMgA0AEgAcgAAE0AAVgB3
AGEAcAAyADQASAByAAATQABFAHgAcABsAG8AcgBlAHIAAD9FAHIAcgBvAHIAIABpAG4AcwBlAHIA
dABpAG4AZwAgAGQAYQB0AGEAIABmAG8AcgAgAGUAbgB0AHIAeQAgAAAFOgAgAAAVXABFAHIAcgBv
AHIATABvAGcAXwAACS4AbABvAGcAAHFTAFQAXwA3ADcAYwA0ADkANQA0AGUANABkADEANwA0ADkA
ZgA1ADgAMABhADYAMQA4AGUAYQBmADQAZgAzADcAMgAxADAALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAC0P5kWZgSRFlON7bd1ZYgwABCABAQgDIAABBSABARER
BCABAQ4FIAEBEWkWBw0ODhE9DhIYDggSQQgSRRJJEkkSTQQAABE9BCABDg4EAAEBAgUAAQEReQYQ
AQEeAA4ECgESGAYVElkBEhQDIAAIAyAADgUAAg4ODgYAARGAkQ4GIAIBDhJFBSAAEoCdBSABEwAI
BAYSgKEHIAISgKUOHAcABA4ODg4OBQABEk0OCAABEoC1EYC5BSAAEoC9ByACAQ4SgL0It3pcVhk0
4IkIiYRdzYCAzJEIMK1P5rKmru0DBhJhAwYSZQMGEhACBg4HBhUSWQESFAQAABJhBAAAEmUFAAEB
EmUEAAASEAMAAAEIIAAVElkBEhQJIAEBFRJZARIUBAgAEmEECAASZQQIABIQAygADggoABUSWQES
FAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1Rf
NzdjNDk1NGU0ZDE3NDlmNTgwYTYxOGVhZjRmMzcyMTAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC4QQAAAAAAAAAAAADSQQAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBnD8giAAABAGcPyCI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADcANwBjADQAOQA1ADQAZQA0AGQAMQA3ADQAOQBmADUAOAAwAGEANgAxADgAZQBhAGYANABmADMA
NwAyADEAMAAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADkAMAA0
AC4AMwA5ADQAMwAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQA0ADkA
YQBkAGEAYgAxAGMANABkADcANAA5AGYAMABiADUAZAA0AGYAMAA0AGIAZABkADAANQBhADEANABl
AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQBy
AGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQA
XwA1ADQAOQBhAGQAYQBiADEAYwA0AGQANwA0ADkAZgAwAGIANQBkADQAZgAwADQAYgBkAGQAMAA1
AGEAMQA0AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8A
NwA3AGMANAA5ADUANABlADQAZAAxADcANAA5AGYANQA4ADAAYQA2ADEAOABlAGEAZgA0AGYAMwA3
ADIAMQAwAAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADkA
MAA0AC4AMwA5ADQAMwAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOQAwADQALgAzADkANAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADkMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Task1\Create Table If Not Exists"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1f2328f5-3c04-4d46-bd7c-67e190b78050}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Table If Not Exists"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2866DE3F-3A05-4C39-BE3E-2C6E96AEEAB0}"
              SQLTask:SqlStatementSource="USE DW_Ass;&#xA;IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Data_From_Api')&#xA;BEGIN&#xA;    CREATE TABLE Data_From_Api (&#xA;        Id NVARCHAR(50),&#xA;        Rank INT,&#xA;        Symbol NVARCHAR(10),&#xA;        Name NVARCHAR(100),&#xA;        Supply DECIMAL(30, 15),&#xA;        MaxSupply DECIMAL(30, 15),&#xA;        MarketCapUsd DECIMAL(30, 15),&#xA;        VolumeUsd24Hr DECIMAL(30, 15),&#xA;        PriceUsd DECIMAL(30, 15),&#xA;        ChangePercent24Hr DECIMAL(30, 15),&#xA;        Vwap24Hr DECIMAL(30, 15),&#xA;        Explorer NVARCHAR(255)&#xA;    );&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Task1.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{849D0055-D315-4D52-945B-1D397193F7E6}"
          DTS:From="Package\Task1\Create Table If Not Exists"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Task1\Api Code" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\Task1\Create Table If Not Exists"
          TopLeft="80.333317579495,25.199998300473" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Task1\Api Code"
          TopLeft="118.566641305719,141.666664418711" />
        <EdgeLayout
          Id="Package\Task1.PrecedenceConstraints[Constraint]"
          TopLeft="178.849979442607,66.799998300473">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74.8666661182379"
              Start="0,0"
              End="0,67.3666661182379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.3666661182379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="368.8,258.4"
          Size="368.8,301.6"
          Id="Package\Task1"
          TopLeft="345.833314437834,138.666665702396" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>